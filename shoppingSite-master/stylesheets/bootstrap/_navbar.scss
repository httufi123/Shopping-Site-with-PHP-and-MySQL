//
// Navbars
// --------------------------------------------------
// Wrapper and base class
//
// Provide a static r from which we expand to create full-width, fixed, and
// other r variations.
.r {
    position: relative;
    min-height: $r-height; // Ensure a r always shows (e.g., without a .r-brand in collapsed mode)
    margin-bottom: $r-margin-bottom;
    border: 1px solid transparent;
    // Prevent floats from breaking the r
    @include clearfix;
    @media (min-width: $grid-float-breakpoint) {
        border-radius: $r-border-radius;
    }
}

// Navbar heading
//
// Groups `.r-brand` and `.r-toggle` into a single component for easy
// styling of responsive aspects.
.r-header {
    @include clearfix;
    @media (min-width: $grid-float-breakpoint) {
        float: left;
    }
}

// Navbar collapse (body)
//
// Group your r content into this for easy collapsing and expanding across
// various device sizes. By default, this content is collapsed when <768px, but
// will expand past that for a horizontal display.
//
// To start (on mobile devices) the r links, forms, and buttons are stacked
// vertically and include a `max-height` to overflow in case you have too much
// content for the user's viewport.
.r-collapse {
    padding-right: $r-padding-horizontal;
    padding-left: $r-padding-horizontal;
    overflow-x: visible;
    border-top: 1px solid transparent;
    box-shadow: inset 0 1px 0 rgba(255, 255, 255, .1);
    @include clearfix;
    -webkit-overflow-scrolling: touch;
    &.in {
        overflow-y: auto;
    }
    @media (min-width: $grid-float-breakpoint) {
        width: auto;
        border-top: 0;
        box-shadow: none;
        &.collapse {
            display: block !important;
            height: auto !important;
            padding-bottom: 0; // Override default setting
            overflow: visible !important;
        }
        &.in {
            overflow-y: visible;
        }
        // Undo the collapse side padding for navbars with containers to ensure
        // alignment of right-aligned contents.
        .r-fixed-top &,
        .r-static-top &,
        .r-fixed-bottom & {
            padding-right: 0;
            padding-left: 0;
        }
    }
}

.r-fixed-top,
.r-fixed-bottom {
    .r-collapse {
        max-height: $r-collapse-max-height;
        @media (max-device-width: $screen-xs-min) and (orientation: landscape) {
            max-height: 200px;
        }
    }
    // Fix the top/bottom navbars when screen real estate supports it
    position: fixed;
    right: 0;
    left: 0;
    z-index: $zindex-r-fixed;
    // Undo the rounded corners
    @media (min-width: $grid-float-breakpoint) {
        border-radius: 0;
    }
}

.r-fixed-top {
    top: 0;
    border-width: 0 0 1px;
}

.r-fixed-bottom {
    bottom: 0;
    margin-bottom: 0; // override .r defaults
    border-width: 1px 0 0;
}

// Both r header and collapse
//
// When a container is present, change the behavior of the header and collapse.
.container,
.container-fluid {
    >.r-header,
    >.r-collapse {
        margin-right: -$r-padding-horizontal;
        margin-left: -$r-padding-horizontal;
        @media (min-width: $grid-float-breakpoint) {
            margin-right: 0;
            margin-left: 0;
        }
    }
}

//
// Navbar alignment options
//
// Display the r across the entirety of the page or fixed it to the top or
// bottom of the page.
// Static top (unfixed, but 100% wide) r
.r-static-top {
    z-index: $zindex-r;
    border-width: 0 0 1px;
    @media (min-width: $grid-float-breakpoint) {
        border-radius: 0;
    }
}

// Brand/project name
.r-brand {
    float: left;
    height: $r-height;
    padding: $r-padding-vertical $r-padding-horizontal;
    font-size: $font-size-large;
    line-height: $line-height-computed;
    &:hover,
    &:focus {
        text-decoration: none;
    }
    >img {
        display: block;
    }
    @media (min-width: $grid-float-breakpoint) {
        .r>.container &,
        .r>.container-fluid & {
            margin-left: -$r-padding-horizontal;
        }
    }
}

// Navbar toggle
//
// Custom button for toggling the `.r-collapse`, powered by the collapse
// JavaScript plugin.
.r-toggle {
    position: relative;
    float: right;
    padding: 9px 10px;
    margin-right: $r-padding-horizontal;
    @include r-vertical-align(34px);
    background-color: transparent;
    background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
    border: 1px solid transparent;
    border-radius: $border-radius-base;
    // We remove the `outline` here, but later compensate by attaching `:hover`
    // styles to `:focus`.
    &:focus {
        outline: 0;
    }
    // Bars
    .icon-bar {
        display: block;
        width: 22px;
        height: 2px;
        border-radius: 1px;
    }
    .icon-bar+.icon-bar {
        margin-top: 4px;
    }
    @media (min-width: $grid-float-breakpoint) {
        display: none;
    }
}

// Navbar nav links
//
// Builds on top of the `.nav` components with its own modifier class to make
// the nav the full height of the horizontal nav (above 768px).
.r-nav {
    margin: ($r-padding-vertical / 2) (-$r-padding-horizontal);
    >li>a {
        padding-top: 10px;
        padding-bottom: 10px;
        line-height: $line-height-computed;
    }
    @media (max-width: $grid-float-breakpoint-max) {
        // Dropdowns get custom display when collapsed
        .open .dropdown-menu {
            position: static;
            float: none;
            width: auto;
            margin-top: 0;
            background-color: transparent;
            border: 0;
            box-shadow: none;
            >li>a,
            .dropdown-header {
                padding: 5px 15px 5px 25px;
            }
            >li>a {
                line-height: $line-height-computed;
                &:hover,
                &:focus {
                    background-image: none;
                }
            }
        }
    }
    // Uncollapse the nav
    @media (min-width: $grid-float-breakpoint) {
        float: left;
        margin: 0;
        >li {
            float: left;
            >a {
                padding-top: $r-padding-vertical;
                padding-bottom: $r-padding-vertical;
            }
        }
    }
}

// Navbar form
//
// Extension of the `.form-inline` with some extra flavor for optimum display in
// our navbars.
.r-form {
    padding: 10px $r-padding-horizontal;
    margin-right: -$r-padding-horizontal;
    margin-left: -$r-padding-horizontal;
    border-top: 1px solid transparent;
    border-bottom: 1px solid transparent;
    $shadow: inset 0 1px 0 rgba(255, 255, 255, .1), 0 1px 0 rgba(255, 255, 255, .1);
    @include box-shadow($shadow);
    // Mixin behavior for optimum display
    @include form-inline;
    .form-group {
        @media (max-width: $grid-float-breakpoint-max) {
            margin-bottom: 5px;
            &:last-child {
                margin-bottom: 0;
            }
        }
    }
    // Vertically center in expanded, horizontal r
    @include r-vertical-align($input-height-base);
    // Undo 100% width for pull classes
    @media (min-width: $grid-float-breakpoint) {
        width: auto;
        padding-top: 0;
        padding-bottom: 0;
        margin-right: 0;
        margin-left: 0;
        border: 0;
        @include box-shadow(none);
    }
}

// Dropdown menus
// Menu position and menu carets
.r-nav>li>.dropdown-menu {
    margin-top: 0;
    @include border-top-radius(0);
}

// Menu position and menu caret support for dropups via extra dropup class
.r-fixed-bottom .r-nav>li>.dropdown-menu {
    margin-bottom: 0;
    @include border-top-radius($r-border-radius);
    @include border-bottom-radius(0);
}

// Buttons in navbars
//
// Vertically center a button within a r (when *not* in a form).
.r-btn {
    @include r-vertical-align($input-height-base);
    &.btn-sm {
        @include r-vertical-align($input-height-small);
    }
    &.btn-xs {
        @include r-vertical-align(22);
    }
}

// Text in navbars
//
// Add a class to make any element properly align itself vertically within the navbars.
.r-text {
    @include r-vertical-align($line-height-computed);
    @media (min-width: $grid-float-breakpoint) {
        float: left;
        margin-right: $r-padding-horizontal;
        margin-left: $r-padding-horizontal;
    }
}

// Component alignment
//
// Repurpose the pull utilities as their own r utilities to avoid specificity
// issues with parents and chaining. Only do this when the r is uncollapsed
// though so that r contents properly stack and align in mobile.
//
// Declared after the r components to ensure more specificity on the margins.
@media (min-width: $grid-float-breakpoint) {
    .r-left {
        float: left !important;
    }
    .r-right {
        float: right !important;
        margin-right: -$r-padding-horizontal;
        ~.r-right {
            margin-right: 0;
        }
    }
}

// Alternate navbars
// --------------------------------------------------
// Default r
.r-default {
    background-color: $r-default-bg;
    border-color: $r-default-border;
    .r-brand {
        color: $r-default-brand-color;
        &:hover,
        &:focus {
            color: $r-default-brand-hover-color;
            background-color: $r-default-brand-hover-bg;
        }
    }
    .r-text {
        color: $r-default-color;
    }
    .r-nav {
        >li>a {
            color: $r-default-link-color;
            &:hover,
            &:focus {
                color: $r-default-link-hover-color;
                background-color: $r-default-link-hover-bg;
            }
        }
        >.active>a {
            &,
            &:hover,
            &:focus {
                color: $r-default-link-active-color;
                background-color: $r-default-link-active-bg;
            }
        }
        >.disabled>a {
            &,
            &:hover,
            &:focus {
                color: $r-default-link-disabled-color;
                background-color: $r-default-link-disabled-bg;
            }
        }
        // Dropdown menu items
        // Remove background color from open dropdown
        >.open>a {
            &,
            &:hover,
            &:focus {
                color: $r-default-link-active-color;
                background-color: $r-default-link-active-bg;
            }
        }
        @media (max-width: $grid-float-breakpoint-max) {
            // Dropdowns get custom display when collapsed
            .open .dropdown-menu {
                >li>a {
                    color: $r-default-link-color;
                    &:hover,
                    &:focus {
                        color: $r-default-link-hover-color;
                        background-color: $r-default-link-hover-bg;
                    }
                }
                >.active>a {
                    &,
                    &:hover,
                    &:focus {
                        color: $r-default-link-active-color;
                        background-color: $r-default-link-active-bg;
                    }
                }
                >.disabled>a {
                    &,
                    &:hover,
                    &:focus {
                        color: $r-default-link-disabled-color;
                        background-color: $r-default-link-disabled-bg;
                    }
                }
            }
        }
    }
    .r-toggle {
        border-color: $r-default-toggle-border-color;
        &:hover,
        &:focus {
            background-color: $r-default-toggle-hover-bg;
        }
        .icon-bar {
            background-color: $r-default-toggle-icon-bar-bg;
        }
    }
    .r-collapse,
    .r-form {
        border-color: $r-default-border;
    }
    // Links in navbars
    //
    // Add a class to ensure links outside the r nav are colored correctly.
    .r-link {
        color: $r-default-link-color;
        &:hover {
            color: $r-default-link-hover-color;
        }
    }
    .btn-link {
        color: $r-default-link-color;
        &:hover,
        &:focus {
            color: $r-default-link-hover-color;
        }
        &[disabled],
        fieldset[disabled] & {
            &:hover,
            &:focus {
                color: $r-default-link-disabled-color;
            }
        }
    }
}

// Inverse r
.r-inverse {
    background-color: $r-inverse-bg;
    border-color: $r-inverse-border;
    .r-brand {
        color: $r-inverse-brand-color;
        &:hover,
        &:focus {
            color: $r-inverse-brand-hover-color;
            background-color: $r-inverse-brand-hover-bg;
        }
    }
    .r-text {
        color: $r-inverse-color;
    }
    .r-nav {
        >li>a {
            color: $r-inverse-link-color;
            &:hover,
            &:focus {
                color: $r-inverse-link-hover-color;
                background-color: $r-inverse-link-hover-bg;
            }
        }
        >.active>a {
            &,
            &:hover,
            &:focus {
                color: $r-inverse-link-active-color;
                background-color: $r-inverse-link-active-bg;
            }
        }
        >.disabled>a {
            &,
            &:hover,
            &:focus {
                color: $r-inverse-link-disabled-color;
                background-color: $r-inverse-link-disabled-bg;
            }
        }
        // Dropdowns
        >.open>a {
            &,
            &:hover,
            &:focus {
                color: $r-inverse-link-active-color;
                background-color: $r-inverse-link-active-bg;
            }
        }
        @media (max-width: $grid-float-breakpoint-max) {
            // Dropdowns get custom display
            .open .dropdown-menu {
                >.dropdown-header {
                    border-color: $r-inverse-border;
                }
                .divider {
                    background-color: $r-inverse-border;
                }
                >li>a {
                    color: $r-inverse-link-color;
                    &:hover,
                    &:focus {
                        color: $r-inverse-link-hover-color;
                        background-color: $r-inverse-link-hover-bg;
                    }
                }
                >.active>a {
                    &,
                    &:hover,
                    &:focus {
                        color: $r-inverse-link-active-color;
                        background-color: $r-inverse-link-active-bg;
                    }
                }
                >.disabled>a {
                    &,
                    &:hover,
                    &:focus {
                        color: $r-inverse-link-disabled-color;
                        background-color: $r-inverse-link-disabled-bg;
                    }
                }
            }
        }
    }
    // Darken the responsive nav toggle
    .r-toggle {
        border-color: $r-inverse-toggle-border-color;
        &:hover,
        &:focus {
            background-color: $r-inverse-toggle-hover-bg;
        }
        .icon-bar {
            background-color: $r-inverse-toggle-icon-bar-bg;
        }
    }
    .r-collapse,
    .r-form {
        border-color: darken($r-inverse-bg, 7%);
    }
    .r-link {
        color: $r-inverse-link-color;
        &:hover {
            color: $r-inverse-link-hover-color;
        }
    }
    .btn-link {
        color: $r-inverse-link-color;
        &:hover,
        &:focus {
            color: $r-inverse-link-hover-color;
        }
        &[disabled],
        fieldset[disabled] & {
            &:hover,
            &:focus {
                color: $r-inverse-link-disabled-color;
            }
        }
    }
}